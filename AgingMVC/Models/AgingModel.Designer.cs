//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AgingModel", "FK_Parent_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AgingMVC.Models.State), "Parent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgingMVC.Models.Parent), true)]
[assembly: EdmRelationshipAttribute("AgingModel", "FK_TaskSurveyResponse_Parent", "Parent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AgingMVC.Models.Parent), "TaskSurveyResponse", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgingMVC.Models.TaskSurveyResponse), true)]
[assembly: EdmRelationshipAttribute("AgingModel", "FK_Parent_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AgingMVC.Models.User), "Parent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgingMVC.Models.Parent), true)]
[assembly: EdmRelationshipAttribute("AgingModel", "FK_TaskSurveyResponse_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AgingMVC.Models.User), "TaskSurveyResponse", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgingMVC.Models.TaskSurveyResponse), true)]
[assembly: EdmRelationshipAttribute("AgingModel", "FK_Objective_Domain", "Domain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AgingMVC.Models.Domain), "Objective", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgingMVC.Models.Objective), true)]
[assembly: EdmRelationshipAttribute("AgingModel", "Uservw_ParentSummary", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AgingMVC.Models.User), "vw_ParentSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgingMVC.Models.vw_ParentSummary), true)]
[assembly: EdmRelationshipAttribute("AgingModel", "FK_Task_Domain", "Domain", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AgingMVC.Models.Domain), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgingMVC.Models.Task), true)]
[assembly: EdmRelationshipAttribute("AgingModel", "FK_Task_Objective", "Objective", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AgingMVC.Models.Objective), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgingMVC.Models.Task), true)]
[assembly: EdmRelationshipAttribute("AgingModel", "FK_Resource_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AgingMVC.Models.State), "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgingMVC.Models.Resource), true)]
[assembly: EdmRelationshipAttribute("AgingModel", "FK_Task_Resources_Resource", "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AgingMVC.Models.Resource), "Task_Resources", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgingMVC.Models.Task_Resources), true)]
[assembly: EdmRelationshipAttribute("AgingModel", "Task_ResourcesTask", "Task_Resources", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgingMVC.Models.Task_Resources), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AgingMVC.Models.Task), true)]
[assembly: EdmRelationshipAttribute("AgingModel", "Domain_Videos", "Domain", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgingMVC.Models.Domain), "Video", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AgingMVC.Models.Video))]

#endregion

namespace AgingMVC.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AgingEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AgingEntities object using the connection string found in the 'AgingEntities' section of the application configuration file.
        /// </summary>
        public AgingEntities() : base("name=AgingEntities", "AgingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AgingEntities object.
        /// </summary>
        public AgingEntities(string connectionString) : base(connectionString, "AgingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AgingEntities object.
        /// </summary>
        public AgingEntities(EntityConnection connection) : base(connection, "AgingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Parent> Parents
        {
            get
            {
                if ((_Parents == null))
                {
                    _Parents = base.CreateObjectSet<Parent>("Parents");
                }
                return _Parents;
            }
        }
        private ObjectSet<Parent> _Parents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> States
        {
            get
            {
                if ((_States == null))
                {
                    _States = base.CreateObjectSet<State>("States");
                }
                return _States;
            }
        }
        private ObjectSet<State> _States;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskSurveyResponse> TaskSurveyResponses
        {
            get
            {
                if ((_TaskSurveyResponses == null))
                {
                    _TaskSurveyResponses = base.CreateObjectSet<TaskSurveyResponse>("TaskSurveyResponses");
                }
                return _TaskSurveyResponses;
            }
        }
        private ObjectSet<TaskSurveyResponse> _TaskSurveyResponses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Domain> Domains
        {
            get
            {
                if ((_Domains == null))
                {
                    _Domains = base.CreateObjectSet<Domain>("Domains");
                }
                return _Domains;
            }
        }
        private ObjectSet<Domain> _Domains;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Objective> Objectives
        {
            get
            {
                if ((_Objectives == null))
                {
                    _Objectives = base.CreateObjectSet<Objective>("Objectives");
                }
                return _Objectives;
            }
        }
        private ObjectSet<Objective> _Objectives;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_ParentSummary> vw_ParentSummary
        {
            get
            {
                if ((_vw_ParentSummary == null))
                {
                    _vw_ParentSummary = base.CreateObjectSet<vw_ParentSummary>("vw_ParentSummary");
                }
                return _vw_ParentSummary;
            }
        }
        private ObjectSet<vw_ParentSummary> _vw_ParentSummary;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Resource> Resources
        {
            get
            {
                if ((_Resources == null))
                {
                    _Resources = base.CreateObjectSet<Resource>("Resources");
                }
                return _Resources;
            }
        }
        private ObjectSet<Resource> _Resources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task_Resources> Task_Resources
        {
            get
            {
                if ((_Task_Resources == null))
                {
                    _Task_Resources = base.CreateObjectSet<Task_Resources>("Task_Resources");
                }
                return _Task_Resources;
            }
        }
        private ObjectSet<Task_Resources> _Task_Resources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Video> Videos
        {
            get
            {
                if ((_Videos == null))
                {
                    _Videos = base.CreateObjectSet<Video>("Videos");
                }
                return _Videos;
            }
        }
        private ObjectSet<Video> _Videos;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParents(Parent parent)
        {
            base.AddObject("Parents", parent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the States EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStates(State state)
        {
            base.AddObject("States", state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskSurveyResponses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskSurveyResponses(TaskSurveyResponse taskSurveyResponse)
        {
            base.AddObject("TaskSurveyResponses", taskSurveyResponse);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Domains EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDomains(Domain domain)
        {
            base.AddObject("Domains", domain);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Objectives EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToObjectives(Objective objective)
        {
            base.AddObject("Objectives", objective);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_ParentSummary EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_ParentSummary(vw_ParentSummary vw_ParentSummary)
        {
            base.AddObject("vw_ParentSummary", vw_ParentSummary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Resources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResources(Resource resource)
        {
            base.AddObject("Resources", resource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Task_Resources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTask_Resources(Task_Resources task_Resources)
        {
            base.AddObject("Task_Resources", task_Resources);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Videos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVideos(Video video)
        {
            base.AddObject("Videos", video);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="parentId">No Metadata Documentation available.</param>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="objectiveId">No Metadata Documentation available.</param>
        public ObjectResult<GetAssessment_Result> GetAssessment(Nullable<global::System.Guid> parentId, Nullable<global::System.Guid> userId, Nullable<global::System.Int32> objectiveId)
        {
            ObjectParameter parentIdParameter;
            if (parentId.HasValue)
            {
                parentIdParameter = new ObjectParameter("parentId", parentId);
            }
            else
            {
                parentIdParameter = new ObjectParameter("parentId", typeof(global::System.Guid));
            }
    
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("userId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("userId", typeof(global::System.Guid));
            }
    
            ObjectParameter objectiveIdParameter;
            if (objectiveId.HasValue)
            {
                objectiveIdParameter = new ObjectParameter("objectiveId", objectiveId);
            }
            else
            {
                objectiveIdParameter = new ObjectParameter("objectiveId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetAssessment_Result>("GetAssessment", parentIdParameter, userIdParameter, objectiveIdParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AgingModel", Name="Domain")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Domain : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Domain object.
        /// </summary>
        /// <param name="domainId">Initial value of the DomainId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="shortName">Initial value of the ShortName property.</param>
        /// <param name="summaryText">Initial value of the SummaryText property.</param>
        /// <param name="domainOrder">Initial value of the DomainOrder property.</param>
        public static Domain CreateDomain(global::System.Int32 domainId, global::System.String name, global::System.String shortName, global::System.String summaryText, global::System.Int32 domainOrder)
        {
            Domain domain = new Domain();
            domain.DomainId = domainId;
            domain.Name = name;
            domain.ShortName = shortName;
            domain.SummaryText = summaryText;
            domain.DomainOrder = domainOrder;
            return domain;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DomainId
        {
            get
            {
                return _DomainId;
            }
            set
            {
                if (_DomainId != value)
                {
                    OnDomainIdChanging(value);
                    ReportPropertyChanging("DomainId");
                    _DomainId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DomainId");
                    OnDomainIdChanged();
                }
            }
        }
        private global::System.Int32 _DomainId;
        partial void OnDomainIdChanging(global::System.Int32 value);
        partial void OnDomainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SummaryText
        {
            get
            {
                return _SummaryText;
            }
            set
            {
                OnSummaryTextChanging(value);
                ReportPropertyChanging("SummaryText");
                _SummaryText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SummaryText");
                OnSummaryTextChanged();
            }
        }
        private global::System.String _SummaryText;
        partial void OnSummaryTextChanging(global::System.String value);
        partial void OnSummaryTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionText
        {
            get
            {
                return _DescriptionText;
            }
            set
            {
                OnDescriptionTextChanging(value);
                ReportPropertyChanging("DescriptionText");
                _DescriptionText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionText");
                OnDescriptionTextChanged();
            }
        }
        private global::System.String _DescriptionText;
        partial void OnDescriptionTextChanging(global::System.String value);
        partial void OnDescriptionTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObjectivesText
        {
            get
            {
                return _ObjectivesText;
            }
            set
            {
                OnObjectivesTextChanging(value);
                ReportPropertyChanging("ObjectivesText");
                _ObjectivesText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObjectivesText");
                OnObjectivesTextChanged();
            }
        }
        private global::System.String _ObjectivesText;
        partial void OnObjectivesTextChanging(global::System.String value);
        partial void OnObjectivesTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DomainOrder
        {
            get
            {
                return _DomainOrder;
            }
            set
            {
                OnDomainOrderChanging(value);
                ReportPropertyChanging("DomainOrder");
                _DomainOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DomainOrder");
                OnDomainOrderChanged();
            }
        }
        private global::System.Int32 _DomainOrder;
        partial void OnDomainOrderChanging(global::System.Int32 value);
        partial void OnDomainOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_Objective_Domain", "Objective")]
        public EntityCollection<Objective> Objectives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Objective>("AgingModel.FK_Objective_Domain", "Objective");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Objective>("AgingModel.FK_Objective_Domain", "Objective", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_Task_Domain", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("AgingModel.FK_Task_Domain", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("AgingModel.FK_Task_Domain", "Task", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "Domain_Videos", "Video")]
        public EntityCollection<Video> Videos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Video>("AgingModel.Domain_Videos", "Video");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Video>("AgingModel.Domain_Videos", "Video", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AgingModel", Name="Objective")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Objective : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Objective object.
        /// </summary>
        /// <param name="objectiveId">Initial value of the ObjectiveId property.</param>
        /// <param name="domainId">Initial value of the DomainId property.</param>
        /// <param name="objectiveText">Initial value of the ObjectiveText property.</param>
        /// <param name="objectiveOrder">Initial value of the ObjectiveOrder property.</param>
        public static Objective CreateObjective(global::System.Int32 objectiveId, global::System.Int32 domainId, global::System.String objectiveText, global::System.Int32 objectiveOrder)
        {
            Objective objective = new Objective();
            objective.ObjectiveId = objectiveId;
            objective.DomainId = domainId;
            objective.ObjectiveText = objectiveText;
            objective.ObjectiveOrder = objectiveOrder;
            return objective;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectiveId
        {
            get
            {
                return _ObjectiveId;
            }
            set
            {
                if (_ObjectiveId != value)
                {
                    OnObjectiveIdChanging(value);
                    ReportPropertyChanging("ObjectiveId");
                    _ObjectiveId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectiveId");
                    OnObjectiveIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectiveId;
        partial void OnObjectiveIdChanging(global::System.Int32 value);
        partial void OnObjectiveIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DomainId
        {
            get
            {
                return _DomainId;
            }
            set
            {
                if (_DomainId != value)
                {
                    OnDomainIdChanging(value);
                    ReportPropertyChanging("DomainId");
                    _DomainId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DomainId");
                    OnDomainIdChanged();
                }
            }
        }
        private global::System.Int32 _DomainId;
        partial void OnDomainIdChanging(global::System.Int32 value);
        partial void OnDomainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ObjectiveText
        {
            get
            {
                return _ObjectiveText;
            }
            set
            {
                OnObjectiveTextChanging(value);
                ReportPropertyChanging("ObjectiveText");
                _ObjectiveText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ObjectiveText");
                OnObjectiveTextChanged();
            }
        }
        private global::System.String _ObjectiveText;
        partial void OnObjectiveTextChanging(global::System.String value);
        partial void OnObjectiveTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectiveOrder
        {
            get
            {
                return _ObjectiveOrder;
            }
            set
            {
                OnObjectiveOrderChanging(value);
                ReportPropertyChanging("ObjectiveOrder");
                _ObjectiveOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectiveOrder");
                OnObjectiveOrderChanged();
            }
        }
        private global::System.Int32 _ObjectiveOrder;
        partial void OnObjectiveOrderChanging(global::System.Int32 value);
        partial void OnObjectiveOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_Objective_Domain", "Domain")]
        public Domain Domain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("AgingModel.FK_Objective_Domain", "Domain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("AgingModel.FK_Objective_Domain", "Domain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Domain> DomainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("AgingModel.FK_Objective_Domain", "Domain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Domain>("AgingModel.FK_Objective_Domain", "Domain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_Task_Objective", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("AgingModel.FK_Task_Objective", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("AgingModel.FK_Task_Objective", "Task", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AgingModel", Name="Parent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Parent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Parent object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="parentID">Initial value of the ParentID property.</param>
        /// <param name="relationship">Initial value of the Relationship property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        public static Parent CreateParent(global::System.Guid userID, global::System.Guid parentID, global::System.String relationship, global::System.String firstName)
        {
            Parent parent = new Parent();
            parent.UserID = userID;
            parent.ParentID = parentID;
            parent.Relationship = relationship;
            parent.FirstName = firstName;
            return parent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                if (_ParentID != value)
                {
                    OnParentIDChanging(value);
                    ReportPropertyChanging("ParentID");
                    _ParentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParentID");
                    OnParentIDChanged();
                }
            }
        }
        private global::System.Guid _ParentID;
        partial void OnParentIDChanging(global::System.Guid value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Relationship
        {
            get
            {
                return _Relationship;
            }
            set
            {
                OnRelationshipChanging(value);
                ReportPropertyChanging("Relationship");
                _Relationship = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Relationship");
                OnRelationshipChanged();
            }
        }
        private global::System.String _Relationship;
        partial void OnRelationshipChanging(global::System.String value);
        partial void OnRelationshipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private Nullable<global::System.Int32> _Age;
        partial void OnAgeChanging(Nullable<global::System.Int32> value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_Parent_State", "State")]
        public State State1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("AgingModel.FK_Parent_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("AgingModel.FK_Parent_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> State1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("AgingModel.FK_Parent_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("AgingModel.FK_Parent_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_TaskSurveyResponse_Parent", "TaskSurveyResponse")]
        public EntityCollection<TaskSurveyResponse> TaskSurveyResponses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskSurveyResponse>("AgingModel.FK_TaskSurveyResponse_Parent", "TaskSurveyResponse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskSurveyResponse>("AgingModel.FK_TaskSurveyResponse_Parent", "TaskSurveyResponse", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_Parent_aspnet_Users", "aspnet_Users")]
        public User aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AgingModel.FK_Parent_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AgingModel.FK_Parent_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AgingModel.FK_Parent_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("AgingModel.FK_Parent_aspnet_Users", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AgingModel", Name="Resource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Resource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Resource object.
        /// </summary>
        /// <param name="resourceID">Initial value of the ResourceID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Resource CreateResource(global::System.Guid resourceID, global::System.Boolean active, global::System.String name)
        {
            Resource resource = new Resource();
            resource.ResourceID = resourceID;
            resource.Active = active;
            resource.Name = name;
            return resource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                if (_ResourceID != value)
                {
                    OnResourceIDChanging(value);
                    ReportPropertyChanging("ResourceID");
                    _ResourceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceID");
                    OnResourceIDChanged();
                }
            }
        }
        private global::System.Guid _ResourceID;
        partial void OnResourceIDChanging(global::System.Guid value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResourceState
        {
            get
            {
                return _ResourceState;
            }
            set
            {
                OnResourceStateChanging(value);
                ReportPropertyChanging("ResourceState");
                _ResourceState = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResourceState");
                OnResourceStateChanged();
            }
        }
        private global::System.String _ResourceState;
        partial void OnResourceStateChanging(global::System.String value);
        partial void OnResourceStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_Resource_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("AgingModel.FK_Resource_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("AgingModel.FK_Resource_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("AgingModel.FK_Resource_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("AgingModel.FK_Resource_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_Task_Resources_Resource", "Task_Resources")]
        public EntityCollection<Task_Resources> Task_Resources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task_Resources>("AgingModel.FK_Task_Resources_Resource", "Task_Resources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task_Resources>("AgingModel.FK_Task_Resources_Resource", "Task_Resources", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AgingModel", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="stateCode">Initial value of the StateCode property.</param>
        /// <param name="stateName">Initial value of the StateName property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static State CreateState(global::System.String stateCode, global::System.String stateName, global::System.Int32 sortOrder)
        {
            State state = new State();
            state.StateCode = stateCode;
            state.StateName = stateName;
            state.SortOrder = sortOrder;
            return state;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StateCode
        {
            get
            {
                return _StateCode;
            }
            set
            {
                if (_StateCode != value)
                {
                    OnStateCodeChanging(value);
                    ReportPropertyChanging("StateCode");
                    _StateCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("StateCode");
                    OnStateCodeChanged();
                }
            }
        }
        private global::System.String _StateCode;
        partial void OnStateCodeChanging(global::System.String value);
        partial void OnStateCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StateName
        {
            get
            {
                return _StateName;
            }
            set
            {
                OnStateNameChanging(value);
                ReportPropertyChanging("StateName");
                _StateName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StateName");
                OnStateNameChanged();
            }
        }
        private global::System.String _StateName;
        partial void OnStateNameChanging(global::System.String value);
        partial void OnStateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_Parent_State", "Parent")]
        public EntityCollection<Parent> Parents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Parent>("AgingModel.FK_Parent_State", "Parent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Parent>("AgingModel.FK_Parent_State", "Parent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_Resource_State", "Resource")]
        public EntityCollection<Resource> Resources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("AgingModel.FK_Resource_State", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("AgingModel.FK_Resource_State", "Resource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AgingModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="taskId">Initial value of the TaskId property.</param>
        /// <param name="objectiveId">Initial value of the ObjectiveId property.</param>
        /// <param name="domainId">Initial value of the DomainId property.</param>
        /// <param name="taskOrder">Initial value of the TaskOrder property.</param>
        /// <param name="shortText">Initial value of the ShortText property.</param>
        /// <param name="promptText">Initial value of the PromptText property.</param>
        /// <param name="assessmentText">Initial value of the AssessmentText property.</param>
        /// <param name="promptTextSelf">Initial value of the PromptTextSelf property.</param>
        /// <param name="assessmentTextSelf">Initial value of the AssessmentTextSelf property.</param>
        public static Task CreateTask(global::System.Int32 taskId, global::System.Int32 objectiveId, global::System.Int32 domainId, global::System.Int32 taskOrder, global::System.String shortText, global::System.String promptText, global::System.String assessmentText, global::System.String promptTextSelf, global::System.String assessmentTextSelf)
        {
            Task task = new Task();
            task.TaskId = taskId;
            task.ObjectiveId = objectiveId;
            task.DomainId = domainId;
            task.TaskOrder = taskOrder;
            task.ShortText = shortText;
            task.PromptText = promptText;
            task.AssessmentText = assessmentText;
            task.PromptTextSelf = promptTextSelf;
            task.AssessmentTextSelf = assessmentTextSelf;
            return task;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                if (_TaskId != value)
                {
                    OnTaskIdChanging(value);
                    ReportPropertyChanging("TaskId");
                    _TaskId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskId");
                    OnTaskIdChanged();
                }
            }
        }
        private global::System.Int32 _TaskId;
        partial void OnTaskIdChanging(global::System.Int32 value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectiveId
        {
            get
            {
                return _ObjectiveId;
            }
            set
            {
                OnObjectiveIdChanging(value);
                ReportPropertyChanging("ObjectiveId");
                _ObjectiveId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectiveId");
                OnObjectiveIdChanged();
            }
        }
        private global::System.Int32 _ObjectiveId;
        partial void OnObjectiveIdChanging(global::System.Int32 value);
        partial void OnObjectiveIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DomainId
        {
            get
            {
                return _DomainId;
            }
            set
            {
                OnDomainIdChanging(value);
                ReportPropertyChanging("DomainId");
                _DomainId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DomainId");
                OnDomainIdChanged();
            }
        }
        private global::System.Int32 _DomainId;
        partial void OnDomainIdChanging(global::System.Int32 value);
        partial void OnDomainIdChanged();
    
        /// <summary>
        /// Order
        /// </summary>
        /// <LongDescription>
        /// The position of the task within its domain
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskOrder
        {
            get
            {
                return _TaskOrder;
            }
            set
            {
                OnTaskOrderChanging(value);
                ReportPropertyChanging("TaskOrder");
                _TaskOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskOrder");
                OnTaskOrderChanged();
            }
        }
        private global::System.Int32 _TaskOrder;
        partial void OnTaskOrderChanging(global::System.Int32 value);
        partial void OnTaskOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortText
        {
            get
            {
                return _ShortText;
            }
            set
            {
                OnShortTextChanging(value);
                ReportPropertyChanging("ShortText");
                _ShortText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortText");
                OnShortTextChanged();
            }
        }
        private global::System.String _ShortText;
        partial void OnShortTextChanging(global::System.String value);
        partial void OnShortTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PromptText
        {
            get
            {
                return _PromptText;
            }
            set
            {
                OnPromptTextChanging(value);
                ReportPropertyChanging("PromptText");
                _PromptText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PromptText");
                OnPromptTextChanged();
            }
        }
        private global::System.String _PromptText;
        partial void OnPromptTextChanging(global::System.String value);
        partial void OnPromptTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssessmentText
        {
            get
            {
                return _AssessmentText;
            }
            set
            {
                OnAssessmentTextChanging(value);
                ReportPropertyChanging("AssessmentText");
                _AssessmentText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AssessmentText");
                OnAssessmentTextChanged();
            }
        }
        private global::System.String _AssessmentText;
        partial void OnAssessmentTextChanging(global::System.String value);
        partial void OnAssessmentTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PromptTextSelf
        {
            get
            {
                return _PromptTextSelf;
            }
            set
            {
                OnPromptTextSelfChanging(value);
                ReportPropertyChanging("PromptTextSelf");
                _PromptTextSelf = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PromptTextSelf");
                OnPromptTextSelfChanged();
            }
        }
        private global::System.String _PromptTextSelf;
        partial void OnPromptTextSelfChanging(global::System.String value);
        partial void OnPromptTextSelfChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssessmentTextSelf
        {
            get
            {
                return _AssessmentTextSelf;
            }
            set
            {
                OnAssessmentTextSelfChanging(value);
                ReportPropertyChanging("AssessmentTextSelf");
                _AssessmentTextSelf = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AssessmentTextSelf");
                OnAssessmentTextSelfChanged();
            }
        }
        private global::System.String _AssessmentTextSelf;
        partial void OnAssessmentTextSelfChanging(global::System.String value);
        partial void OnAssessmentTextSelfChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_Task_Domain", "Domain")]
        public Domain Domain
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("AgingModel.FK_Task_Domain", "Domain").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("AgingModel.FK_Task_Domain", "Domain").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Domain> DomainReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domain>("AgingModel.FK_Task_Domain", "Domain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Domain>("AgingModel.FK_Task_Domain", "Domain", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_Task_Objective", "Objective")]
        public Objective Objective
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Objective>("AgingModel.FK_Task_Objective", "Objective").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Objective>("AgingModel.FK_Task_Objective", "Objective").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Objective> ObjectiveReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Objective>("AgingModel.FK_Task_Objective", "Objective");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Objective>("AgingModel.FK_Task_Objective", "Objective", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "Task_ResourcesTask", "Task_Resources")]
        public EntityCollection<Task_Resources> Task_Resources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task_Resources>("AgingModel.Task_ResourcesTask", "Task_Resources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task_Resources>("AgingModel.Task_ResourcesTask", "Task_Resources", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AgingModel", Name="Task_Resources")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task_Resources : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task_Resources object.
        /// </summary>
        /// <param name="taskID">Initial value of the TaskID property.</param>
        /// <param name="resourceID">Initial value of the ResourceID property.</param>
        public static Task_Resources CreateTask_Resources(global::System.Int32 taskID, global::System.Guid resourceID)
        {
            Task_Resources task_Resources = new Task_Resources();
            task_Resources.TaskID = taskID;
            task_Resources.ResourceID = resourceID;
            return task_Resources;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                if (_TaskID != value)
                {
                    OnTaskIDChanging(value);
                    ReportPropertyChanging("TaskID");
                    _TaskID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskID");
                    OnTaskIDChanged();
                }
            }
        }
        private global::System.Int32 _TaskID;
        partial void OnTaskIDChanging(global::System.Int32 value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                if (_ResourceID != value)
                {
                    OnResourceIDChanging(value);
                    ReportPropertyChanging("ResourceID");
                    _ResourceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceID");
                    OnResourceIDChanged();
                }
            }
        }
        private global::System.Guid _ResourceID;
        partial void OnResourceIDChanging(global::System.Guid value);
        partial void OnResourceIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_Task_Resources_Resource", "Resource")]
        public Resource Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("AgingModel.FK_Task_Resources_Resource", "Resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("AgingModel.FK_Task_Resources_Resource", "Resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Resource> ResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("AgingModel.FK_Task_Resources_Resource", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Resource>("AgingModel.FK_Task_Resources_Resource", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "Task_ResourcesTask", "Task")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("AgingModel.Task_ResourcesTask", "Task").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("AgingModel.Task_ResourcesTask", "Task").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("AgingModel.Task_ResourcesTask", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("AgingModel.Task_ResourcesTask", "Task", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AgingModel", Name="TaskSurveyResponse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskSurveyResponse : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskSurveyResponse object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="parentID">Initial value of the ParentID property.</param>
        /// <param name="taskID">Initial value of the TaskID property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="completed">Initial value of the Completed property.</param>
        /// <param name="timeline">Initial value of the Timeline property.</param>
        public static TaskSurveyResponse CreateTaskSurveyResponse(global::System.Guid userID, global::System.Guid parentID, global::System.Int32 taskID, global::System.DateTime lastUpdated, global::System.Boolean completed, global::System.Int32 timeline)
        {
            TaskSurveyResponse taskSurveyResponse = new TaskSurveyResponse();
            taskSurveyResponse.UserID = userID;
            taskSurveyResponse.ParentID = parentID;
            taskSurveyResponse.TaskID = taskID;
            taskSurveyResponse.LastUpdated = lastUpdated;
            taskSurveyResponse.Completed = completed;
            taskSurveyResponse.Timeline = timeline;
            return taskSurveyResponse;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                if (_ParentID != value)
                {
                    OnParentIDChanging(value);
                    ReportPropertyChanging("ParentID");
                    _ParentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParentID");
                    OnParentIDChanged();
                }
            }
        }
        private global::System.Guid _ParentID;
        partial void OnParentIDChanging(global::System.Guid value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                if (_TaskID != value)
                {
                    OnTaskIDChanging(value);
                    ReportPropertyChanging("TaskID");
                    _TaskID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskID");
                    OnTaskIDChanged();
                }
            }
        }
        private global::System.Int32 _TaskID;
        partial void OnTaskIDChanging(global::System.Int32 value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Completed
        {
            get
            {
                return _Completed;
            }
            set
            {
                OnCompletedChanging(value);
                ReportPropertyChanging("Completed");
                _Completed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Completed");
                OnCompletedChanged();
            }
        }
        private global::System.Boolean _Completed;
        partial void OnCompletedChanging(global::System.Boolean value);
        partial void OnCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Timeline
        {
            get
            {
                return _Timeline;
            }
            set
            {
                OnTimelineChanging(value);
                ReportPropertyChanging("Timeline");
                _Timeline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timeline");
                OnTimelineChanged();
            }
        }
        private global::System.Int32 _Timeline;
        partial void OnTimelineChanging(global::System.Int32 value);
        partial void OnTimelineChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_TaskSurveyResponse_Parent", "Parent")]
        public Parent Parent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parent>("AgingModel.FK_TaskSurveyResponse_Parent", "Parent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parent>("AgingModel.FK_TaskSurveyResponse_Parent", "Parent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parent> ParentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parent>("AgingModel.FK_TaskSurveyResponse_Parent", "Parent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parent>("AgingModel.FK_TaskSurveyResponse_Parent", "Parent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_TaskSurveyResponse_aspnet_Users", "aspnet_Users")]
        public User aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AgingModel.FK_TaskSurveyResponse_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AgingModel.FK_TaskSurveyResponse_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AgingModel.FK_TaskSurveyResponse_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("AgingModel.FK_TaskSurveyResponse_aspnet_Users", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AgingModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static User CreateUser(global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            User user = new User();
            user.UserId = userId;
            user.UserName = userName;
            user.LoweredUserName = loweredUserName;
            user.IsAnonymous = isAnonymous;
            user.LastActivityDate = lastActivityDate;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        private global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_Parent_aspnet_Users", "Parent")]
        public EntityCollection<Parent> Parents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Parent>("AgingModel.FK_Parent_aspnet_Users", "Parent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Parent>("AgingModel.FK_Parent_aspnet_Users", "Parent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "FK_TaskSurveyResponse_aspnet_Users", "TaskSurveyResponse")]
        public EntityCollection<TaskSurveyResponse> TaskSurveyResponses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskSurveyResponse>("AgingModel.FK_TaskSurveyResponse_aspnet_Users", "TaskSurveyResponse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskSurveyResponse>("AgingModel.FK_TaskSurveyResponse_aspnet_Users", "TaskSurveyResponse", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "Uservw_ParentSummary", "vw_ParentSummary")]
        public EntityCollection<vw_ParentSummary> ParentSummaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<vw_ParentSummary>("AgingModel.Uservw_ParentSummary", "vw_ParentSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<vw_ParentSummary>("AgingModel.Uservw_ParentSummary", "vw_ParentSummary", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AgingModel", Name="Video")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Video : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Video object.
        /// </summary>
        /// <param name="videoID">Initial value of the VideoID property.</param>
        /// <param name="uRL">Initial value of the URL property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Video CreateVideo(global::System.Int32 videoID, global::System.String uRL, global::System.Int32 type)
        {
            Video video = new Video();
            video.VideoID = videoID;
            video.URL = uRL;
            video.Type = type;
            return video;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VideoID
        {
            get
            {
                return _VideoID;
            }
            set
            {
                if (_VideoID != value)
                {
                    OnVideoIDChanging(value);
                    ReportPropertyChanging("VideoID");
                    _VideoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VideoID");
                    OnVideoIDChanged();
                }
            }
        }
        private global::System.Int32 _VideoID;
        partial void OnVideoIDChanging(global::System.Int32 value);
        partial void OnVideoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortText
        {
            get
            {
                return _ShortText;
            }
            set
            {
                OnShortTextChanging(value);
                ReportPropertyChanging("ShortText");
                _ShortText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortText");
                OnShortTextChanged();
            }
        }
        private global::System.String _ShortText;
        partial void OnShortTextChanging(global::System.String value);
        partial void OnShortTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Copyright
        {
            get
            {
                return _Copyright;
            }
            set
            {
                OnCopyrightChanging(value);
                ReportPropertyChanging("Copyright");
                _Copyright = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Copyright");
                OnCopyrightChanged();
            }
        }
        private global::System.String _Copyright;
        partial void OnCopyrightChanging(global::System.String value);
        partial void OnCopyrightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ThumbImageURL
        {
            get
            {
                return _ThumbImageURL;
            }
            set
            {
                OnThumbImageURLChanging(value);
                ReportPropertyChanging("ThumbImageURL");
                _ThumbImageURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ThumbImageURL");
                OnThumbImageURLChanged();
            }
        }
        private global::System.String _ThumbImageURL;
        partial void OnThumbImageURLChanging(global::System.String value);
        partial void OnThumbImageURLChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "Domain_Videos", "Domain")]
        public EntityCollection<Domain> Domains
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Domain>("AgingModel.Domain_Videos", "Domain");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Domain>("AgingModel.Domain_Videos", "Domain", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AgingModel", Name="vw_ParentSummary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_ParentSummary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_ParentSummary object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="parentID">Initial value of the ParentID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="completed">Initial value of the Completed property.</param>
        /// <param name="total">Initial value of the Total property.</param>
        /// <param name="medicalTotal">Initial value of the MedicalTotal property.</param>
        /// <param name="legalTotal">Initial value of the LegalTotal property.</param>
        /// <param name="emotionalTotal">Initial value of the EmotionalTotal property.</param>
        /// <param name="socialTotal">Initial value of the SocialTotal property.</param>
        /// <param name="medicalAssessmentCompleted">Initial value of the MedicalAssessmentCompleted property.</param>
        /// <param name="medicalTaskCompleted">Initial value of the MedicalTaskCompleted property.</param>
        /// <param name="legalAssessmentCompleted">Initial value of the LegalAssessmentCompleted property.</param>
        /// <param name="legalTaskCompleted">Initial value of the LegalTaskCompleted property.</param>
        /// <param name="socialAssessmentCompleted">Initial value of the SocialAssessmentCompleted property.</param>
        /// <param name="socialTaskCompleted">Initial value of the SocialTaskCompleted property.</param>
        /// <param name="emotionalAssessmentCompleted">Initial value of the EmotionalAssessmentCompleted property.</param>
        /// <param name="emotionalTaskCompleted">Initial value of the EmotionalTaskCompleted property.</param>
        public static vw_ParentSummary Createvw_ParentSummary(global::System.Guid userID, global::System.Guid parentID, global::System.String firstName, global::System.Int32 completed, global::System.Int32 total, global::System.Int32 medicalTotal, global::System.Int32 legalTotal, global::System.Int32 emotionalTotal, global::System.Int32 socialTotal, global::System.Int32 medicalAssessmentCompleted, global::System.Int32 medicalTaskCompleted, global::System.Int32 legalAssessmentCompleted, global::System.Int32 legalTaskCompleted, global::System.Int32 socialAssessmentCompleted, global::System.Int32 socialTaskCompleted, global::System.Int32 emotionalAssessmentCompleted, global::System.Int32 emotionalTaskCompleted)
        {
            vw_ParentSummary vw_ParentSummary = new vw_ParentSummary();
            vw_ParentSummary.UserID = userID;
            vw_ParentSummary.ParentID = parentID;
            vw_ParentSummary.FirstName = firstName;
            vw_ParentSummary.Completed = completed;
            vw_ParentSummary.Total = total;
            vw_ParentSummary.MedicalTotal = medicalTotal;
            vw_ParentSummary.LegalTotal = legalTotal;
            vw_ParentSummary.EmotionalTotal = emotionalTotal;
            vw_ParentSummary.SocialTotal = socialTotal;
            vw_ParentSummary.MedicalAssessmentCompleted = medicalAssessmentCompleted;
            vw_ParentSummary.MedicalTaskCompleted = medicalTaskCompleted;
            vw_ParentSummary.LegalAssessmentCompleted = legalAssessmentCompleted;
            vw_ParentSummary.LegalTaskCompleted = legalTaskCompleted;
            vw_ParentSummary.SocialAssessmentCompleted = socialAssessmentCompleted;
            vw_ParentSummary.SocialTaskCompleted = socialTaskCompleted;
            vw_ParentSummary.EmotionalAssessmentCompleted = emotionalAssessmentCompleted;
            vw_ParentSummary.EmotionalTaskCompleted = emotionalTaskCompleted;
            return vw_ParentSummary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                if (_ParentID != value)
                {
                    OnParentIDChanging(value);
                    ReportPropertyChanging("ParentID");
                    _ParentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParentID");
                    OnParentIDChanged();
                }
            }
        }
        private global::System.Guid _ParentID;
        partial void OnParentIDChanging(global::System.Guid value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Completed
        {
            get
            {
                return _Completed;
            }
            set
            {
                OnCompletedChanging(value);
                ReportPropertyChanging("Completed");
                _Completed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Completed");
                OnCompletedChanged();
            }
        }
        private global::System.Int32 _Completed;
        partial void OnCompletedChanging(global::System.Int32 value);
        partial void OnCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private global::System.Int32 _Total;
        partial void OnTotalChanging(global::System.Int32 value);
        partial void OnTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicalTotal
        {
            get
            {
                return _MedicalTotal;
            }
            set
            {
                OnMedicalTotalChanging(value);
                ReportPropertyChanging("MedicalTotal");
                _MedicalTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicalTotal");
                OnMedicalTotalChanged();
            }
        }
        private global::System.Int32 _MedicalTotal;
        partial void OnMedicalTotalChanging(global::System.Int32 value);
        partial void OnMedicalTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LegalTotal
        {
            get
            {
                return _LegalTotal;
            }
            set
            {
                OnLegalTotalChanging(value);
                ReportPropertyChanging("LegalTotal");
                _LegalTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LegalTotal");
                OnLegalTotalChanged();
            }
        }
        private global::System.Int32 _LegalTotal;
        partial void OnLegalTotalChanging(global::System.Int32 value);
        partial void OnLegalTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmotionalTotal
        {
            get
            {
                return _EmotionalTotal;
            }
            set
            {
                OnEmotionalTotalChanging(value);
                ReportPropertyChanging("EmotionalTotal");
                _EmotionalTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmotionalTotal");
                OnEmotionalTotalChanged();
            }
        }
        private global::System.Int32 _EmotionalTotal;
        partial void OnEmotionalTotalChanging(global::System.Int32 value);
        partial void OnEmotionalTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SocialTotal
        {
            get
            {
                return _SocialTotal;
            }
            set
            {
                OnSocialTotalChanging(value);
                ReportPropertyChanging("SocialTotal");
                _SocialTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SocialTotal");
                OnSocialTotalChanged();
            }
        }
        private global::System.Int32 _SocialTotal;
        partial void OnSocialTotalChanging(global::System.Int32 value);
        partial void OnSocialTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicalAssessmentCompleted
        {
            get
            {
                return _MedicalAssessmentCompleted;
            }
            set
            {
                if (_MedicalAssessmentCompleted != value)
                {
                    OnMedicalAssessmentCompletedChanging(value);
                    ReportPropertyChanging("MedicalAssessmentCompleted");
                    _MedicalAssessmentCompleted = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedicalAssessmentCompleted");
                    OnMedicalAssessmentCompletedChanged();
                }
            }
        }
        private global::System.Int32 _MedicalAssessmentCompleted;
        partial void OnMedicalAssessmentCompletedChanging(global::System.Int32 value);
        partial void OnMedicalAssessmentCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicalTaskCompleted
        {
            get
            {
                return _MedicalTaskCompleted;
            }
            set
            {
                if (_MedicalTaskCompleted != value)
                {
                    OnMedicalTaskCompletedChanging(value);
                    ReportPropertyChanging("MedicalTaskCompleted");
                    _MedicalTaskCompleted = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedicalTaskCompleted");
                    OnMedicalTaskCompletedChanged();
                }
            }
        }
        private global::System.Int32 _MedicalTaskCompleted;
        partial void OnMedicalTaskCompletedChanging(global::System.Int32 value);
        partial void OnMedicalTaskCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LegalAssessmentCompleted
        {
            get
            {
                return _LegalAssessmentCompleted;
            }
            set
            {
                if (_LegalAssessmentCompleted != value)
                {
                    OnLegalAssessmentCompletedChanging(value);
                    ReportPropertyChanging("LegalAssessmentCompleted");
                    _LegalAssessmentCompleted = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LegalAssessmentCompleted");
                    OnLegalAssessmentCompletedChanged();
                }
            }
        }
        private global::System.Int32 _LegalAssessmentCompleted;
        partial void OnLegalAssessmentCompletedChanging(global::System.Int32 value);
        partial void OnLegalAssessmentCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LegalTaskCompleted
        {
            get
            {
                return _LegalTaskCompleted;
            }
            set
            {
                if (_LegalTaskCompleted != value)
                {
                    OnLegalTaskCompletedChanging(value);
                    ReportPropertyChanging("LegalTaskCompleted");
                    _LegalTaskCompleted = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LegalTaskCompleted");
                    OnLegalTaskCompletedChanged();
                }
            }
        }
        private global::System.Int32 _LegalTaskCompleted;
        partial void OnLegalTaskCompletedChanging(global::System.Int32 value);
        partial void OnLegalTaskCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SocialAssessmentCompleted
        {
            get
            {
                return _SocialAssessmentCompleted;
            }
            set
            {
                if (_SocialAssessmentCompleted != value)
                {
                    OnSocialAssessmentCompletedChanging(value);
                    ReportPropertyChanging("SocialAssessmentCompleted");
                    _SocialAssessmentCompleted = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SocialAssessmentCompleted");
                    OnSocialAssessmentCompletedChanged();
                }
            }
        }
        private global::System.Int32 _SocialAssessmentCompleted;
        partial void OnSocialAssessmentCompletedChanging(global::System.Int32 value);
        partial void OnSocialAssessmentCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SocialTaskCompleted
        {
            get
            {
                return _SocialTaskCompleted;
            }
            set
            {
                if (_SocialTaskCompleted != value)
                {
                    OnSocialTaskCompletedChanging(value);
                    ReportPropertyChanging("SocialTaskCompleted");
                    _SocialTaskCompleted = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SocialTaskCompleted");
                    OnSocialTaskCompletedChanged();
                }
            }
        }
        private global::System.Int32 _SocialTaskCompleted;
        partial void OnSocialTaskCompletedChanging(global::System.Int32 value);
        partial void OnSocialTaskCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmotionalAssessmentCompleted
        {
            get
            {
                return _EmotionalAssessmentCompleted;
            }
            set
            {
                if (_EmotionalAssessmentCompleted != value)
                {
                    OnEmotionalAssessmentCompletedChanging(value);
                    ReportPropertyChanging("EmotionalAssessmentCompleted");
                    _EmotionalAssessmentCompleted = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmotionalAssessmentCompleted");
                    OnEmotionalAssessmentCompletedChanged();
                }
            }
        }
        private global::System.Int32 _EmotionalAssessmentCompleted;
        partial void OnEmotionalAssessmentCompletedChanging(global::System.Int32 value);
        partial void OnEmotionalAssessmentCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmotionalTaskCompleted
        {
            get
            {
                return _EmotionalTaskCompleted;
            }
            set
            {
                if (_EmotionalTaskCompleted != value)
                {
                    OnEmotionalTaskCompletedChanging(value);
                    ReportPropertyChanging("EmotionalTaskCompleted");
                    _EmotionalTaskCompleted = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmotionalTaskCompleted");
                    OnEmotionalTaskCompletedChanged();
                }
            }
        }
        private global::System.Int32 _EmotionalTaskCompleted;
        partial void OnEmotionalTaskCompletedChanging(global::System.Int32 value);
        partial void OnEmotionalTaskCompletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AgingModel", "Uservw_ParentSummary", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AgingModel.Uservw_ParentSummary", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AgingModel.Uservw_ParentSummary", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AgingModel.Uservw_ParentSummary", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("AgingModel.Uservw_ParentSummary", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="AgingModel", Name="GetAssessment_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetAssessment_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetAssessment_Result object.
        /// </summary>
        /// <param name="taskId">Initial value of the TaskId property.</param>
        /// <param name="objectiveId">Initial value of the ObjectiveId property.</param>
        /// <param name="domainId">Initial value of the DomainId property.</param>
        /// <param name="taskOrder">Initial value of the TaskOrder property.</param>
        /// <param name="shortText">Initial value of the ShortText property.</param>
        /// <param name="promptText">Initial value of the PromptText property.</param>
        /// <param name="assessmentText">Initial value of the AssessmentText property.</param>
        /// <param name="promptTextSelf">Initial value of the PromptTextSelf property.</param>
        /// <param name="assessmentTextSelf">Initial value of the AssessmentTextSelf property.</param>
        /// <param name="completed">Initial value of the Completed property.</param>
        public static GetAssessment_Result CreateGetAssessment_Result(global::System.Int32 taskId, global::System.Int32 objectiveId, global::System.Int32 domainId, global::System.Int32 taskOrder, global::System.String shortText, global::System.String promptText, global::System.String assessmentText, global::System.String promptTextSelf, global::System.String assessmentTextSelf, global::System.Boolean completed)
        {
            GetAssessment_Result getAssessment_Result = new GetAssessment_Result();
            getAssessment_Result.TaskId = taskId;
            getAssessment_Result.ObjectiveId = objectiveId;
            getAssessment_Result.DomainId = domainId;
            getAssessment_Result.TaskOrder = taskOrder;
            getAssessment_Result.ShortText = shortText;
            getAssessment_Result.PromptText = promptText;
            getAssessment_Result.AssessmentText = assessmentText;
            getAssessment_Result.PromptTextSelf = promptTextSelf;
            getAssessment_Result.AssessmentTextSelf = assessmentTextSelf;
            getAssessment_Result.Completed = completed;
            return getAssessment_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                OnTaskIdChanging(value);
                ReportPropertyChanging("TaskId");
                _TaskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskId");
                OnTaskIdChanged();
            }
        }
        private global::System.Int32 _TaskId;
        partial void OnTaskIdChanging(global::System.Int32 value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectiveId
        {
            get
            {
                return _ObjectiveId;
            }
            set
            {
                OnObjectiveIdChanging(value);
                ReportPropertyChanging("ObjectiveId");
                _ObjectiveId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectiveId");
                OnObjectiveIdChanged();
            }
        }
        private global::System.Int32 _ObjectiveId;
        partial void OnObjectiveIdChanging(global::System.Int32 value);
        partial void OnObjectiveIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DomainId
        {
            get
            {
                return _DomainId;
            }
            set
            {
                OnDomainIdChanging(value);
                ReportPropertyChanging("DomainId");
                _DomainId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DomainId");
                OnDomainIdChanged();
            }
        }
        private global::System.Int32 _DomainId;
        partial void OnDomainIdChanging(global::System.Int32 value);
        partial void OnDomainIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskOrder
        {
            get
            {
                return _TaskOrder;
            }
            set
            {
                OnTaskOrderChanging(value);
                ReportPropertyChanging("TaskOrder");
                _TaskOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskOrder");
                OnTaskOrderChanged();
            }
        }
        private global::System.Int32 _TaskOrder;
        partial void OnTaskOrderChanging(global::System.Int32 value);
        partial void OnTaskOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortText
        {
            get
            {
                return _ShortText;
            }
            set
            {
                OnShortTextChanging(value);
                ReportPropertyChanging("ShortText");
                _ShortText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortText");
                OnShortTextChanged();
            }
        }
        private global::System.String _ShortText;
        partial void OnShortTextChanging(global::System.String value);
        partial void OnShortTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PromptText
        {
            get
            {
                return _PromptText;
            }
            set
            {
                OnPromptTextChanging(value);
                ReportPropertyChanging("PromptText");
                _PromptText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PromptText");
                OnPromptTextChanged();
            }
        }
        private global::System.String _PromptText;
        partial void OnPromptTextChanging(global::System.String value);
        partial void OnPromptTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssessmentText
        {
            get
            {
                return _AssessmentText;
            }
            set
            {
                OnAssessmentTextChanging(value);
                ReportPropertyChanging("AssessmentText");
                _AssessmentText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AssessmentText");
                OnAssessmentTextChanged();
            }
        }
        private global::System.String _AssessmentText;
        partial void OnAssessmentTextChanging(global::System.String value);
        partial void OnAssessmentTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PromptTextSelf
        {
            get
            {
                return _PromptTextSelf;
            }
            set
            {
                OnPromptTextSelfChanging(value);
                ReportPropertyChanging("PromptTextSelf");
                _PromptTextSelf = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PromptTextSelf");
                OnPromptTextSelfChanged();
            }
        }
        private global::System.String _PromptTextSelf;
        partial void OnPromptTextSelfChanging(global::System.String value);
        partial void OnPromptTextSelfChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssessmentTextSelf
        {
            get
            {
                return _AssessmentTextSelf;
            }
            set
            {
                OnAssessmentTextSelfChanging(value);
                ReportPropertyChanging("AssessmentTextSelf");
                _AssessmentTextSelf = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AssessmentTextSelf");
                OnAssessmentTextSelfChanged();
            }
        }
        private global::System.String _AssessmentTextSelf;
        partial void OnAssessmentTextSelfChanging(global::System.String value);
        partial void OnAssessmentTextSelfChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdated;
        partial void OnLastUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Completed
        {
            get
            {
                return _Completed;
            }
            set
            {
                OnCompletedChanging(value);
                ReportPropertyChanging("Completed");
                _Completed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Completed");
                OnCompletedChanged();
            }
        }
        private global::System.Boolean _Completed;
        partial void OnCompletedChanging(global::System.Boolean value);
        partial void OnCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Timeline
        {
            get
            {
                return _Timeline;
            }
            set
            {
                OnTimelineChanging(value);
                ReportPropertyChanging("Timeline");
                _Timeline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timeline");
                OnTimelineChanged();
            }
        }
        private Nullable<global::System.Int32> _Timeline;
        partial void OnTimelineChanging(Nullable<global::System.Int32> value);
        partial void OnTimelineChanged();

        #endregion

    }

    #endregion

    
}
